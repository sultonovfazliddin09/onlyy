import type { Metadata } from "next";
import { Roboto, Space_Grotesk } from "next/font/google";
import "./globals.css";
import { ChildProps } from "@/types";
import { ThemeProvider } from "@/components/providers/theme-providers";
import { languages } from "@/i18next/settings";
import { dir } from "i18next";
import { ClerkProvider } from "@clerk/nextjs";
import { localization } from "@/lib/utils";

const roboto = Roboto({
  weight: ["100", "300", "500", "700", "900"],
  variable: "--font-roboto",
  subsets: ["latin"],
});

const spaceGrotesk = Space_Grotesk({
  variable: "--font-space-grotesk",
  weight: ["300", "500", "700"],
  subsets: ["latin"],
});

export async function generateStaticParams() {
  return languages.map((lng) => ({ lng }));
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface Props extends ChildProps {
  params: { lng: string };
}

export default function RootLayout({ children, params: { lng } }: Props) {
  const local = localization(lng);
  return (
    <ClerkProvider localization={local}>
      <html lang="en" dir={dir(lng)} suppressHydrationWarning>
        <body
          className={`${roboto.variable} ${spaceGrotesk.variable} antialiased`}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
